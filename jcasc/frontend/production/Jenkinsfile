pipeline {
    agent { 
        label 'vm4'
    }
    environment{
        GITHUB_ACCESS_TOKEN = credentials("github_access_token")
    }
    stages {
        stage('Setup Environment'){
            steps{
                script{
                    dir('AN-OPEN-NETRA-FE'){
                        git branch: 'main',
                           //credentialsId: 'github_access_token',
                            url: "https://github.com/whiwk/netra_frontend.git"
                        script{
                            env.COMMIT_SHORT_SHA = sh (
                                script: 'git log --pretty=format:\'%h\' -n 1',
                                returnStdout: true
                            ).trim()
                        }
                    }
                }
            }           
        }
        stage('Build Image') {
            steps {
                script {
                    dir('AN-OPEN-NETRA-FE') {
                        sh 'docker build -t quay.tiplab.local/openetra/fe:${COMMIT_SHORT_SHA} .'
                    }
                }
            }
        }
        stage('Push Image and delete locally') {
            steps {
                script {
                    sh 'docker push quay.tiplab.local/openetra/fe:${COMMIT_SHORT_SHA}'
                    sh 'docker rmi quay.tiplab.local/openetra/fe:${COMMIT_SHORT_SHA}'
                }
            }
        }
        stage('Change Image Tag on Github'){
                    steps {
                        script{
                            env.GIT_URL = "https://oauth2:${GITHUB_ACCESS_TOKEN}@github.com/adaptivenetworklab/AN-OPEN-NETRA-MANIFESTS.git"
                        }
                        dir('AN-OPEN-NETRA-MANIFESTS'){
                            git branch: 'main',
                                url: "$GIT_URL"
                            sh 'git config user.email gintingari73@gmail.com && git config user.name arigints'
                            sh 'sed -i "s+quay.tiplab.local/openetra/fe:.*+quay.tiplab.local/openetra/fe:${COMMIT_SHORT_SHA}+g" app/overlay/staging/frontend/deployment.yaml'
                            sh 'git add . && git commit -m "(bot) update frontend deployment.yaml image tag to ${COMMIT_SHORT_SHA}" || true'
                            sh 'git push origin main'
                        }
                    }
                }
        stage('Argocd Setup') {
            steps {
                withCredentials([string(credentialsId: "argocd-auth-token", variable: 'ARGOCD_AUTH_TOKEN')]) {
                    sh "argocd repo add https://github.com/adaptivenetworklab/AN-OPEN-NETRA-MANIFESTS.git --type git --username arigints --password ${GITHUB_ACCESS_TOKEN} --upsert"
                    sh 'ARGOCD_SERVER=10.30.1.214:31844 argocd --grpc-web app create openetra-fe-production --project default --repo https://github.com/adaptivenetworklab/AN-OPEN-NETRA-MANIFESTS.git --path app/overlay/production/frontend --revision main --dest-namespace production --dest-server https://kubernetes.default.svc --upsert'
                }
            }
        }
        stage('Argocd Sync') {
            steps {
                withCredentials([string(credentialsId: "argocd-auth-token", variable: 'ARGOCD_AUTH_TOKEN')]) {
                    sh 'argocd --grpc-web app sync openetra-fe-production --prune --force'
                }
            }
        }
    }
}